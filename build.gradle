buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.3.0"
        classpath "org.barfuin.gradle.jacocolog:gradle-jacoco-log:3.1.0"
    }
}

plugins {
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.kordamp.gradle.build-info' version "0.54.0"
}
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'base'
apply plugin: 'maven-publish'
apply plugin: 'org.barfuin.gradle.jacocolog'
apply plugin: 'checkstyle'
apply from: 'jacoco.gradle'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'
check.dependsOn javadoc
checkstyle.toolVersion = '8.36.2'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    testLogging{
        exceptionFormat='full'
    }
	useJUnitPlatform()
    finalizedBy jacocoTestReport, jacocoTestCoverageVerification
    jvmArgs("--add-opens=java.base/java.time=ALL-UNNAMED")
}

tasks.withType(Checkstyle) {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}